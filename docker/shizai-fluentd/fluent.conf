<source>
  # 受信を指定し,ラベル付け
  @type forward
  @label @input
  port 24224
  bind 0.0.0.0
  skip_invalid_event true
</source>

<label @input>
  <match docker.**>
    @type copy
    # ログファイルに出力用ラベル
    <store>
      @type relabel
      @label @output_file
    </store>
    # ログ解析用ラベル
    <store>
      @type relabel
      @label @log_analysis
    </store>
  </match>
</label>

# まずはすべてのログをファイルに出力しておく
<label @output_file>
  # 必要な情報のみ出すように変更
  <filter>
    @type record_transformer
    # コンテナ名と実logのみを抽出
    keep_keys         container_name, log
    renew_record      true
  </filter>

  <match **>
    @type file
    # 最終的なファイルパス docker.YYYYMMDD.log の形式となる
    path                /var/log/shizai/fluentd/docker
    time_slice_format   %Y%m%d
    format              ltsv
    # 現在利用最新で利用されている buffer.log ファイルとのシンボリックリンク
    symlink_path        /var/log/shizai/fluentd/docker_current
    # buffer ファイルがいっぱいになった場合 path のログに追記する
    append              true
    # buffer 出力先. まずはここにログが吐かれ,上限が来たら path のファイルにログが移動
    buffer_type         file
    buffer_path         /var/log/shizai/fluentd/docker_buffer/
    buffer_chunk_limit  1k
    # シャットダウン時にメモリに蓄えているものを吐き出す
    flush_at_shutdown   true
  </match>
</label>

<label @log_analysis>
  <filter docker.shizai**>
    @type parser
    format                        /^(?<time>[^ ]* [^ ]*) *(?<loglevel>\[.*?\]) (?<message>.*)/
    time_format                   %Y-%m-%d %H:%M:%S
    key_name                      log
    # パースできない形式のログは破棄
    emit_invalid_record_to_error  false
  </filter>

  <match docker.shizai**>
    @type rewrite_tag_filter
    # loglevel が WARNING のもののタグ書き換え
    <rule>
      key       loglevel
      pattern   /^\[WARNING.*\]/
      tag       docker.log.alert
    </rule>
    # loglevel が ERROR のもののタグ書き換え
    <rule>
      key       loglevel
      pattern   /^\[ERROR.*\]/
      tag       docker.log.escalation
    </rule>
  </match>
  # WARNING のものを処理
  <match docker.log.alert>
    @type copy
    <store>
      @type file
      # 最終的なファイルパス docker_alert.YYYYMMDD.log の形式となる
      path                  /var/log/shizai/fluentd/docker_alert
      time_slice_format     %Y%m%d
      format                ltsv
      # 現在利用最新で利用されている buffer.log ファイルとのシンボリックリンク
      symlink_path          /var/log/shizai/fluentd/docker_alert_current
      # buffer 出力先. まずはここにログが吐かれ,上限が来たら path のファイルにログが移動
      buffer_type           file
    buffer_path             /var/log/shizai/fluentd/docker_alert_buffer/
      buffer_chunk_limit    1k
    </store>
  </match>
  # ERROR のものを処理
  <match docker.log.escalation>
    @type copy
    <store>
      @type file
      # 最終的なファイルパス docker_escalation.YYYYMMDD.log の形式となる
      path                  /var/log/shizai/fluentd/docker_escalation
      time_slice_format     %Y%m%d
      format                ltsv
      # 現在利用最新で利用されている buffer.log ファイルとのシンボリックリンク
      symlink_path          /var/log/shizai/fluentd/docker_escalation_current
      # buffer 出力先. まずはここにログが吐かれ,上限が来たら path のファイルにログが移動
      buffer_type           file
      buffer_path           /var/log/shizai/fluentd/docker_escalation_buffer/
      buffer_chunk_limit    1k
    </store>
  </match>
</label>
